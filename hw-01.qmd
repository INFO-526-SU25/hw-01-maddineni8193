---
title: "HW 01"
author: "Sravani Maddineni"
format: 
  html:
    embed-resources: true
execute :
  warning: false
  message: false
  error: false
toc: true
---

## 0 - Setup

```{r setup}
if (!require("pacman")) 
  install.packages("pacman")

# use this line for installing/loading
pacman::p_load(tidyverse,
               palmerpenguins) 

devtools::install_github("tidyverse/dsbox")
```

```{r}

```

## 1 - Road traffic accidents in Edinburgh

```         
```

```{r}
# Load and glimpse the dataset
library(tidyverse)
library(hms)

accidents <- read_csv("data/accidents.csv")

# View structure: number of rows, columns, and variable types
glimpse(accidents)

```

```{r}
# Preprocessing: convert date/time and classify as weekend/weekday
accidents <- accidents %>%
  mutate(
    date = as.Date(date),
    time = as_hms(time),
    day_type = if_else(weekdays(date) %in% c("Saturday", "Sunday"), "Weekend", "Weekday"),
    severity = factor(severity, levels = c("Fatal", "Serious", "Slight"))
  )

```

```{r}
# Density plot showing accident times by day type and severity
ggplot(accidents, aes(x = time, fill = severity)) +
  geom_density(alpha = 0.6) +
  facet_wrap(~day_type, ncol = 1) +
  scale_fill_manual(values = c("Fatal" = "purple", "Serious" = "steelblue", "Slight" = "khaki")) +
  labs(
    title = "Accident Density in Edinburgh Throughout the Day (2018)",
    subtitle = "By Day Type (Weekend vs Weekday) and Severity",
    x = "Time of Day",
    y = "Density",
    fill = "Severity"
  ) +
  theme_minimal()

```

Interpretation

The dataset contains records of traffic accidents in Edinburgh during 2018. After inspecting the structure with glimpse( ), we see variables such as date, time, location, and severity.

The plot above shows the distribution of accident times across weekdays and weekends. Most accidents happen during morning and evening hours, likely aligned with commuting times. Slight accidents dominate, but serious and fatal ones also peak around the same hours. Weekends show a delay in peak accident time, indicating different travel behavior.

```         
```

## 2 - NYC marathon winner

```{r}
# Load necessary libraries
# install.packages("openintro")
library(ggplot2)
library(openintro)
# Load the dataset
data("nyc_marathon")
head(nyc_marathon)
summary(nyc_marathon)
# Histogram of marathon times
ggplot(data = nyc_marathon, aes(x = time)) +
  geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
  labs(
    title = "Histogram of Marathon Times",
    x = "Marathon Time (minutes)",
    y = "Frequency"
  ) +
  theme_minimal()

# Box plot of marathon times
ggplot(nyc_marathon, aes(y=time)) +
geom_boxplot(fill="lightgreen", color="black") +
labs(title="Box Plot of Marathon Times", y="Marathon Time (minutes)") +
  theme_minimal()

# Create Side-by-Side Box Plots for Men and Women
ggplot(nyc_marathon, aes(x=division, y=time, fill=division)) +
geom_boxplot(color="black") +
scale_fill_manual(values=c("lightblue", "lightpink")) +
labs(title="Box Plot of Marathon Times by Gender", x="Gender", y="Marathon Time (minutes)")+
  theme_minimal()
head(nyc_marathon)
summary(nyc_marathon)

# Identify and Remove Redundant Information::
ggplot(nyc_marathon, aes(x = division, y = time, fill = division)) +
  geom_boxplot(show.legend = FALSE) +
  scale_fill_manual(values = c("Men" = "#ff595e", "Women" = "#8ac926")) +
  labs(title = "Marathon Times by Gender (Simplified)",
       x = "Division",
       y = "Time (Minutes)") +
  theme_minimal()

# Visualize Marathon Times Over the Years::
head(nyc_marathon)

ggplot(nyc_marathon, aes(x=year, y=time, color=division, shape=division)) +
geom_point() +
scale_color_manual(values=c("lightblue", "lightpink")) +
scale_shape_manual(values=c(16, 17)) +
labs(title="Marathon Times Over the Years", x="Year", y="Marathon Time (minutes)") +
theme_minimal()

```

Interpretation: Histogram: Shows the distribution of marathon times, illustrating the shape and spread of the data. Peaks, gaps, and overall density are visible. Box Plot: Provides a summary of the data’s central tendency and spread, highlighting median, quartiles, and outliers.

It does not show the overall distribution shape or frequency details. This plot compares marathon times between men and women. Different colors (light blue for men and light pink for women) visually distinguish between the two groups. You can see differences in median times, variability, and potential outliers for each gender.

This plot compares marathon times between men and women. Different colors (light blue for men and light pink for women) visually distinguish between the two groups. You can see differences in median times, variability, and potential outliers for each gender.

Redundancy Removed: Outliers points and extra axis ticks are removed to focus on the main data features. Removing the legend is also considered if it’s redundant (e.g., if the colors are clear from the context). This update enhances the data-to-ink ratio by reducing non-essential visual elements.

Time Series Plot: This plot shows how marathon times for men and women have changed over the years. Different colors and shapes represent men and women, allowing for a clear comparison of trends and changes in marathon performance over time. This visualization provides insights into how race times have evolved, which is not visible in the histogram or box plot.

## 3 - US counties

```{r}

```

```         
```

```{r}

```

## 4 - Rental apartments in SF

## 5 - Napoleon’s march.
